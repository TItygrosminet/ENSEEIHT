with Ada.Text_IO;           use Ada.Text_IO;
with Ada.Integer_Text_IO;   use Ada.Integer_Text_IO;
with arbre; use arbre;
with LCA_projet;
procedure Test_Arbre is

	package LCA is
		new LCA_projet (T_Cle => Integer, T_Donnee => T_Arbre);
	use LCA;

	Nb_Noeuds : constant Integer := 5;
        Tab_Freq : constant array (1..Nb_Noeuds) of Integer
              := (1,2,3,4,5);
    --(8)
    -- \--0--(5)
    -- |
    -- \--1--1(3)
    --         \--0--(2)
    --         \--1--(1)

    procedure Construire_Exemple_Arbre (Arbre : out T_Arbre; Bavard: Boolean := False) is
    Sda : T_LCA;
    Arbre_Fusion : T_Arbre;
    begin
        for i in 1..Nb_Noeuds loop
            LCA.Initialiser(Sda);
            Initialiser(Arbre, Tab_Freq(i));
            LCA.Enregistrer(Sda, Tab_Freq(i), Arbre);
        end loop;
        for I in 1..Nb_Noeuds-1 loop
            Arbre_Fusion := Fusion(Premier(Sda), Deuxieme(Sda));
            Supprimer_Premier(Sda);
            Supprimer_Premier(Sda);
            Enregistrer(Sda,Frequence(Arbre_Fusion),Arbre_Fusion);
        end loop;
        Arbre := Premier(Sda);
    end Construire_Exemple_Arbre;


    procedure Tester_Exemple_Arbre is
        Arbre : T_Arbre;
    begin
	Construire_Exemple_Arbre (Arbre, True);
	Vider(Arbre);
    end Tester_Exemple_Arbre;

    procedure Tester_Arbre_Gauche_Droite is
    Arbre : T_Arbre;
    Sous_Arbre : T_Arbre;
    Nouveau_Arbre: T_Arbre;
    begin
	Construire_Exemple_Arbre (Arbre, True);
        Initialiser(Sous_Arbre, 30);
        Nouveau_Arbre := Fusion(Arbre, Sous_Arbre);
        pragma assert(Arbre_Gauche(Nouveau_Arbre) = Sous_Arbre);
        pragma assert(Arbre_Droit(Nouveau_Arbre) = Arbre);
        Vider(Nouveau_Arbre);
    end Tester_Arbre_Gauche_Droite;

    procedure Tester_Frequence is
    Arbre : T_Arbre;
    begin
        Construire_Exemple_Arbre (Arbre, True);
        pragma assert(1 = Frequence(Arbre_Gauche(Arbre_Gauche(Arbre))));
        Vider(Arbre);
    end Tester_Frequence;

    procedure Tester_Taille is
    Arbre : T_Arbre;
    begin
        Construire_Exemple_Arbre(Arbre, True);
        pragma assert (5 = Taille(Arbre));
        Vider(Arbre);
    end Tester_Taille;

    procedure Tester_Fusion is
    Arbre1 : T_Arbre;
    Arbre2 : T_Arbre;
    Arbre_Fusion : T_Arbre;
    begin
          Initialiser(Arbre1, 2);
          Initialiser(Arbre1, 5);
          Arbre_Fusion := Fusion(Arbre1, Arbre2);
          pragma assert (7 =Frequence(Arbre_Fusion));
          pragma assert (Arbre1 = Arbre_Gauche(Arbre_Fusion));
          pragma assert (Arbre2 = Arbre_Droit(Arbre_Fusion));
          Vider(Arbre_Fusion);
    end Tester_Fusion;

begin
    Tester_Exemple_Arbre;
    Tester_Arbre_Gauche_Droite;
    Tester_Frequence;
    Tester_Taille;
    Tester_Fusion;
    Put_Line ("Fin des tests : OK.");
end Test_Arbre;
